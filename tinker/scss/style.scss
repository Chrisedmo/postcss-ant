@mixin grid() {
  generate-grid:
    sizes(
      ratio(1.618, 3)
      ratio(1.618, 2)
      ratio(1.618, 7)
      ratio(1.618, 2)
    )
    gutter(15px)
  ;
}

.tink {
  @include grid;
}

// Common
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  overflow-x: hidden;
  font-family: sans-serif;
  line-height: 50px;
  text-align: center;
  font-weight: bold;
  color: rgba(blue, .5);
  padding: 15px;
}

.tink *,
.grid * {
  background: rgba(blue, .15);
  margin-bottom: 15px;
}

// in.scss
$gutter: 15px;
$ratio: 1.618;
$sizes:
  ratio($ratio, 2)
  ratio($ratio, 6)
  ratio($ratio, 4)
;
$length: length($sizes);

.grid {
  display: flex;
  flex-wrap: wrap;
  margin-left: -$gutter / 2;
  margin-right: -$gutter / 2;

  > * {
    margin-left: $gutter / 2;
    margin-right: $gutter / 2;
  }
}

@for $i from 1 through $length {
  .column-#{$i} {
    width:
      sizes($sizes)
      gutter($gutter)
      pluck($i)
      grid(negative-margin)
    ;
  }
}
